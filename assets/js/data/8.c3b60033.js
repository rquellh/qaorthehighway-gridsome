(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{266:function(e){e.exports={data:{session:{speaker:"Brendan Connolly",bio:"Brendan Connolly is a Software Tester, Developer and blogger based out of Santa Barbara, California with nearly a decade of testing experience in a variety of different roles. He writes tests at all levels from unit and integration tests to API and UI tests and is responsible for creating and executing testing strategies while using his coding powers for developing tooling to help make testers lives easier.",title:"Panoramic Quality",abstract:"DevOps drastically changes the landscape of testing. Collaboration between operations and development teams enables a steady stream of small changes to be deployed to production. This pace of change puts a real strain on traditional testing activities. There used to be a sense of safety in dedicating hours or even days to testing after code is complete and before release, yet this is a luxury and liability in DevOps. The more time that elapses from when code is written to when it is deployed, the more risk is actually introduced. The geography of production code is in a constant state of change, so the longer testing takes the more the landscape around and even beneath you changes, and the more risk it accrues. This rapid rate of change requires testers to broaden their vision, and shift the focus and geography of their actions. In this talk testers will see that while they may have lost full ownership the testing tasks they are accustomed to performing, DevOps has expanded the opportunity for testers to become arbiters of quality. To help testers look beyond deriving quality from executing tests and shift towards becoming quality owners, I'll share 3 core responsibilities of testers in DevOps: to know, protect, and verify. I'll then provide four key areas of focus: code, customer, architecture, and environment discussing the how testers can establish quality ownership through these responsibilities. This talk will help testers to find their path to enabling continuous quality, sharing test ownership across the team while instilling value from pull request to production. Take Aways: -A working definition of Quality Ownership and its relationship to Product Ownership. -How testing needs to change depending on where code is running. -Why test against the developers local changes? -How testers can start taking ownership of code without knowing how to write it",time:"3:05 - 4:05",room:"Great Hall 3"}}}}}]);